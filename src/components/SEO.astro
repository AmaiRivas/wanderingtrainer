---
interface Props {
  title: string
  description: string
  canonical?: string
  image?: string
}

const {
	title,
	description,
	canonical,
	image = "/tft-wandering-trainer.jpg",
} = Astro.props as Props

const determineCanonicalURL = () => {
	if (Astro.url.host.includes("localhost")) return "http://localhost:4321"
	return canonical || Astro.url.pathname
}

const canonicalURL = new URL(determineCanonicalURL(), Astro.site)
---

<title>{title}</title>

<meta charset="UTF-8" />
<meta name="description" content={description} />

<link rel="canonical" href={canonicalURL} />
<meta name="viewport" content="width=device-width" />
<meta name="theme-color" content="#0D202B" />

<meta name="keywords" content="wandering trainer, TFT, League of Legends, Teamfight Tactics, TFT tool, TFT traits" />

<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@wanderingTrainer" />
<meta name="twitter:creator" content="@Tube" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, Astro.url)} />

<meta property="og:image" content={new URL(image, Astro.url)} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={Astro.url} />
<meta property="og:site_name" content="Wandering Trainer - TFT" />
<meta property="og:type" content="website" />
<meta property="og:locale" content="en_EN" />

<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="apple-touch-icon" href="/img/icons/apple-touch-icon.png" />

<link rel="icon" type="image/x-icon" href="/favicon.ico" />