---
import CloseIcon from "./CloseIcon.astro";

import type { Creator } from '../types/Creator';
import { creators } from '../data/creators.ts';

function shuffleArray(array: Creator[]): Creator[] {
  return array.sort(() => Math.random() - 0.5);
}

const shuffledCreators = shuffleArray(creators);
---

<dialog id="dialog" style="display: none;">
  <div id="dialog-content" class="dialog-content">
    <div class="dialog-wrapper">
      <h2>How To Use</h2>
      <button id="closeDialog" type="button" aria-label="Close">
        <CloseIcon></CloseIcon>
      </button>
      <div class="dialog-body">
        <section>
          <p>Welcome to our Wandering Trainer TFT tool!</p>
          <h3 class="section-title">Getting Started</h3>
          <p>This website is a tool for TFT that allows you to quickly and effectively find the best combinations based on a selection of traits, whether from wandering trainers, spatulas, or others!</p>
        </section>
        <section>
          <h3 class="section-title">Contact</h3>
          <p>If you need any assistance, we're here to help:</p>
          <ul>
            {shuffledCreators.map((creator, _) => (
              <>
                <li><strong>LinkedIn:</strong> <a href={creator.link} target="_blank">{creator.name}</a></li>
              </>
            ))}
          </ul>
        </section>
      </div>
    </div>
  </div>
</dialog>

<style>
  dialog {
    position: fixed;
    display: flex;
    top: 0;
    left: 0;
    padding: 0;
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    padding-top: 30px;
    padding-bottom: 30px;
    background-color: rgba(255, 255, 255, 0);
    z-index: 2000;
    transition: background-color 0.3s ease;
  }

  dialog.is-open {
    background-color: rgba(255, 255, 255, 0.1);
  }

  .dialog-content {
    max-width: 520px;
    padding: 32px;
    position: relative;
    border-radius: 8px;
    border: 1px solid #f6f7f8;
    color: black;
    box-shadow: 0 4px 23px 0 rgba(0, 0, 0, .2);
    width: 90%;
    max-height: 100%;
    overflow-y: auto;
    background: white;

    &.is-open {
      animation: SlideIn 200ms;
    }

    &.is-closing {
      animation: SlideOut 200ms;
    }

    .dialog-wrapper {
      padding: 16px;
      width: 100%;

    }

    h2 {
      font-weight: 700;
      font-size: 28px;
      letter-spacing: 0;
      line-height: 30px;
      text-transform: none;
      text-align: left;
      margin-bottom: 4px;
      margin-top: 29px;
      display: block;
    }

    button {
      width: 30px;
      height: 30px;
      background: none;
      border: none;
      padding: 0;
      position: absolute;
      top: 16px;
      right: 16px;
      cursor: pointer;
      user-select: none;

      svg {
        width: 100%;
        height: auto;
      }
    }

    .dialog-body {
      section {
        margin-bottom: 1.5rem;

        .section-title {
          font-size: 1.125rem;
          font-weight: 600;
        }

        ul {
          li {
            margin-bottom: 5px;
          }
        }
      }
    }
  }

  @keyframes SlideIn {
    0% {
      transform: translateY(30px);
      opacity: 0;
    }
    100% {
      transform: translateY(0px);
      opacity: 1;
    }
  }

  @keyframes SlideOut {
  0% {
    transform: translateY(0px);
    opacity: 1;
  }
  100% {
    transform: translateY(30px);
    opacity: 0;
  }
}
</style>